version: '3.8'

services:
  # Main agentic application
  agent-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agentic-api
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=production
      - LOG_LEVEL=info
      - REDIS_HOST=redis
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    networks:
      - agentic-network
    volumes:
      - ./logs:/app/logs

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: agentic-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    restart: unless-stopped
    networks:
      - agentic-network

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: agentic-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - agent-api
    restart: unless-stopped
    networks:
      - agentic-network

networks:
  agentic-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
